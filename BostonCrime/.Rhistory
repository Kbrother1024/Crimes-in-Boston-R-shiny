sd(chickwts$weight) #Returns the standard deviation of the weight variable.
var(chickwts$weight) #Returns the variance of the weight variable.
table(chickwts) #Returns a contingency table of weight and feed.
plot(density(chickwts$weight), main = "Overall Distribution of Chick Weights")
plot(density(chickwts$weight), main = "Overall Distribution of Chick Weights")
abline(v = mean(chickwts$weight), lwd = 2, lty = 2)
abline(v = 280, lwd = 2, lty = 2, col = "red")
legend("topright", c("True Mean = 261.3", "H0 Mean = 280"), lwd = 2,
lty = 2, col = c("black", "red"))
boxplot(chickwts$weight, main = "Overall Distribution of Chick Weights")
abline(h = mean(chickwts$weight), lwd = 2, lty = 2)
abline(h = 280, lwd = 2, lty = 2, col = "red")
legend("topright", c("True Mean = 261.3", "H0 Mean = 280"), lwd = 2,
lty = 2, col = c("black", "red"))
t.test(chickwts$weight, mu = 280, alternative = "less")
boxplot(chickwts$weight ~ chickwts$feed,
col = c("red", "orange", "yellow", "green", "blue", "violet"),
main = "Distribution of Chick Weights\nfor Various Feed Types")
summary(aov(chickwts$weight ~ chickwts$feed))
#We are specifically interested in the casein and meatmeal diet types. Do the
#reported chick weights have the same variance? To determine, conduct an F-test:
var.test(chickwts$weight[chickwts$feed == "casein"],
chickwts$weight[chickwts$feed == "meatmeal"],
alternative = "two.sided")
get_url <- function(year, quarter){
url = paste0(
"https://projects.propublica.org/congress/assets/staffers/",
year, quarter,
"-house-disburse-detail.csv"
)
return(url)
}
load_file_get_fname <- function(year, quarter){
url = get_url(year, quarter)
result = tryCatch(
{
print(paste0("Downloading for ", year, " ", quarter))
read.csv(url)
},
error = function(e) {
print(paste0("The url might not exist, no data for ", year, quarter, " is loaded."))
NULL}
)
fname = paste0(year, "-", quarter, ".csv")
path = paste0("./data/", fname)
if(length(result)!=0){
write.csv(result, path, row.names = FALSE)
} else {
fname = NULL
}
return(fname)
}
lst_fnames = character()
four_quarters = paste("Q", 1:4, sep = "")
for(year in 2009:2018){
for(quarter in four_quarters){
i = length(lst_fnames) + 1
fname = load_file_get_fname(year, quarter)
if(length(fname)!=0){
lst_fnames[i] = fname
}
}
}
write(lst_fnames, "data/lst_fnames.txt")
getwd()
lst_fnames
result
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
head(temp)
str(temp)
getwd()
shiny::runApp('ShinyProject/BostonCrime')
runApp('ShinyProject/BostonCrime')
dist
levels(dist$date)
levels(date_trend$date)
date_trend$date
format(date_trend$date, '%Y')
format(date_trend$date, '%Y%V')
date_trend = df %>%
mutate(date = as.Date(df$occurred_on_date, format = "%Y-%m-%d")) %>%
mutate(format(date, '%Y%V')) %>%
group_by(date) %>%
summarise(n = n())
date_trend
df %>%
mutate(date = as.Date(df$occurred_on_date, format = "%Y-%m-%d")) %>%
mutate(date = format(date, '%Y%V')) %>%
group_by(date) %>%
summarise(n = n())
runApp('ShinyProject/BostonCrime')
date_trend %>%
group_by(district, year) %>%
summarise(date_crime_count = n())
date_trend %>%
group_by(district, year) %>%
summarise(date_crime_count = n()) %>%
ggplot(aes(x = year, y = date_crime_count))+
geom_line(aes(color = district))
date_trend %>%
group_by(district, month) %>%
summarise(date_crime_count = n()) %>%
ggplot(aes(x = month, y = date_crime_count))+
geom_line(aes(color = district))
date_trend %>%
group_by(district, week) %>%
summarise(date_crime_count = n()) %>%
ggplot(aes(x = week, y = date_crime_count))+
geom_line(aes(color = district))
date_trend %>%
group_by(district, day_of_week) %>%
summarise(date_crime_count = n()) %>%
ggplot(aes(x = day_of_week, y = date_crime_count))+
geom_line(aes(color = district))
date_trend %>%
group_by(district, day_of_week) %>%
summarise(date_crime_count = n())
date_trend %>%
group_by(district, day_of_week) %>%
summarise(date_crime_count = n()) %>%
ggplot(aes(x = as.character(day_of_week), y = date_crime_count))+
geom_line(aes(color = district))
date_trend %>%
group_by(district, day_of_week) %>%
summarise(date_crime_count = n()) %>%
ggplot(aes(x = as.character(day_of_week), y = date_crime_count))+
geom_line(aes(color = district), group = samples)
date_trend %>%
group_by(district, day_of_week) %>%
summarise(date_crime_count = n()) %>%
ggplot(aes(x = as.character(day_of_week), y = date_crime_count))+
geom_line(aes(color = district), group = district)
date_trend %>%
group_by(district, day_of_week) %>%
summarise(date_crime_count = n()) %>%
ggplot(aes(x = as.character(day_of_week), y = date_crime_count))+
geom_line(aes(color = district, group = district))
runApp('ShinyProject/BostonCrime')
runApp('ShinyProject/BostonCrime')
runApp('ShinyProject/BostonCrime')
runApp('ShinyProject/BostonCrime')
head(dist)
unique(dist$offense_code_group)
length(unique(dist$offense_code_group))
dist %>%
group_by(offense_code_group) %>%
summarise(count = n())
dist %>%
group_by(offense_code_group) %>%
summarise(count = n()) %>%
arrange(count)
dist %>%
group_by(offense_code_group) %>%
summarise(count = n()) %>%
arrange(desc(count))
dist %>%
group_by(district, offense_code_group) %>%
summarise(count = n()) %>%
arrange(desc(count))
runApp('ShinyProject/BostonCrime')
dist %>%
group_by(district, offense_code_group) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
top_n(10)
dist %>%
group_by(district, offense_code_group) %>%
summarise(count = n()) %>%
top_n(10)
dist %>%
group_by(district, offense_code_group) %>%
summarise(count = n()) %>%
top_n(count, 10)
dist %>%
group_by(district, offense_code_group) %>%
summarise(count = n()) %>%
top_n(ungroup(district),10)
dist %>%
group_by(district, offense_code_group) %>%
summarise(count = n()) %>%
top_n(ungroup(district, offense_code_group),10)
dist %>%
group_by(district, offense_code_group) %>%
summarise(count = n()) %>%
top_n(ungroup(district, offense_code_group),10)
dist %>%
group_by(district, offense_code_group) %>%
summarise(count = n()) %>%
head(10)
dist %>%
group_by(district, offense_code_group) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
head(10)
install.packages('tm')
install.packages('wordcloud')
library(tm)
library(wordcloud)
dist %>%
group_by(district, offense_code_group) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
head(10)
x = dist %>%
group_by(district, offense_code_group) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
head(10)
Corpus(VectorSource(x$offense_code_group))
corpus = Corpus(VectorSource(x$offense_code_group))
corpus[[1]][1]
install.packages('memoise')
library(memoise)
word_clean = dist$offense_code
word_clean
word_clean = dist$offense_code_group
word_clean
corpus = Corpus(VectorSource(word_clean))
corpus = tm_map(corpus, content_transformer(tolower))
corpus = tm_map(corpus, removePunctuation)
corpus = tm_map(corpus, removeNumbers)
corpus = tm_map(corpus, removeWords)
corpus = tm_map(corpus, stripWhitespace)
corpus[[1]][1]
corpus[[1]][2]
corpus[[1]][1]
corpus = tm_map(corpus, stripWhitespace)
corpus[[1]][1]
tdm = TermDocumentMatrix(corpus)
m = as.matrix(tdm)
v = sort(rowSums(m), decreasing = T)
d = data.frame(word = names(v), freq = v)
d
runApp('ShinyProject/BostonCrime')
install.packages("wordcloud2")
library(wordcloud2)
runApp('ShinyProject/BostonCrime')
head(date_trend)
date_trend[,c(1,3)]
runApp('ShinyProject/BostonCrime')
date_trend[,c(X,"offense_code")]
date_trend[,c('X',"offense_code")]
runApp('ShinyProject/BostonCrime')
dist %>%
group_by(district, offense_code_group) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
head(10)
x = dist %>%
group_by(district, offense_code_group) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
head(10)
x[,c(2,3)]
x = dist %>%
filter(district == 'E18') %>%
group_by(district, offense_code_group) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
head(10)
x[,c(2,3)]
runApp('ShinyProject/BostonCrime')
x = dist %>%
filter(district == 'E18') %>%
group_by(district, offense_code_group) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
head(10)
x[,c(2,3)]
dist_word = df %>%
mutate(offense_code_group =
ifelse(offense_code_group == 'Motor Vehicle Accident Response',
'Motor Accident', offense_code_group))
dist_word
runApp('ShinyProject/BostonCrime')
runApp('ShinyProject/BostonCrime')
runApp('ShinyProject/BostonCrime')
unique(dist_word$offense_code_group)
pattern = 'Motor Vehicle Accident Response',
replacement = "Motor Accident",
x = offense_code_group,
ignore.case = F)) %>%
mutate(
dist_word = df %>%
mutate(
offense_code_group = gsub(
pattern = 'Motor Vehicle Accident Response',
replacement = "Motor Accident",
x = offense_code_group,
ignore.case = F))
unique(dist_word$offense_code_group)
dist_word = df %>%
mutate(
offense_code_group = gsub(
pattern = 'Motor Vehicle Accident Response',
replacement = "Motor Accident",
x = offense_code_group))
unique(dist_word$offense_code_group)
pattern = "HUMAN TRAFFICKING - INVOLUNTARY SERVITUDE",
replacement = "INVOLUNTARY SERVITUDE",
x = offense_code_group)) %>%
mutate(
dist_word = df %>%
mutate(
offense_code_group = gsub(
pattern = 'Motor Vehicle Accident Response',
replacement = "Motor Accident",
x = offense_code_group))
dist_word = df %>%
mutate(
offense_code_group = gsub(
pattern = 'Motor Vehicle Accident Response',
replacement = "Motor Accident",
x = offense_code_group)) %>%
mutate(
offense_code_group = gsub(
pattern = "HUMAN TRAFFICKING - INVOLUNTARY SERVITUDE",
replacement = "INVOLUNTARY SERVITUDE",
x = offense_code_group)) %>%
mutate(
offense_code_group = gsub(
pattern = "Burglary - No Property Taken",
replacement = "unaccomplished burglary",
x = offense_code_group))
pattern = "HUMAN TRAFFICKING - INVOLUNTARY SERVITUDE",
replacement = "INVOLUNTARY SERVITUDE",
x = offense_code_group)) %>%
mutate(
dist_word = df %>%
mutate(
offense_code_group = gsub(
pattern = 'Motor Vehicle Accident Response',
replacement = "Motor Accident"))
dist_word = df %>%
mutate(offense_code_group = gsub(
pattern = 'Motor Vehicle Accident Response',
replacement = "Motor Accident"))
dist_word = df %>%
mutate(offense_code_group = gsub(
pattern = 'Motor Vehicle Accident Response',
replacement = "Motor Accident",
x = offense_code_group))
dist_word = df %>%
mutate(offense_code_group = gsub(
pattern = 'Motor Vehicle Accident Response',
replacement = "Motor Accident",
x = offense_code_group)) %>%
mutate(offense_code_group = gsub(
pattern = "HUMAN TRAFFICKING - INVOLUNTARY SERVITUDE",
replacement = "INVOLUNTARY SERVITUDE",
x = offense_code_group)) %>%
mutate(offense_code_group = gsub(
pattern = "Burglary - No Property Taken",
replacement = "unaccomplished burglary",
x = offense_code_group))
unique(dist_word$offense_code_group)
pattern = "HUMAN TRAFFICKING - INVOLUNTARY SERVITUDE",
replacement = "INVOLUNTARY SERVITUDE",
x = offense_code_group)) %>%
mutate(offense_code_group = gsub(
pattern = "HUMAN TRAFFICKING - INVOLUNTARY SERVITUDE",
replacement = "INVOLUNTARY SERVITUDE",
x = offense_code_group)) %>%
mutate(offense_code_group = gsub(
dist_word = df %>%
mutate(offense_code_group = gsub(
pattern = 'Motor Vehicle Accident Response',
replacement = "Motor Accident",
x = offense_code_group)) %>%
mutate(offense_code_group = gsub(
pattern = "HUMAN TRAFFICKING - INVOLUNTARY SERVITUDE",
replacement = "INVOLUNTARY SERVITUDE",
x = offense_code_group)) %>%
mutate(offense_code_group = gsub(
pattern = "Burglary - No Property Taken",
replacement = "Burglary NPT",
x = offense_code_group))
dist_word = df %>%
mutate(offense_code_group = gsub(
pattern = 'Motor Vehicle Accident Response',
replacement = "Motor Accident",
x = offense_code_group)) %>%
mutate(offense_code_group = gsub(
pattern = "HUMAN TRAFFICKING - INVOLUNTARY SERVITUDE",
replacement = "INVOLUNTARY SERVITUDE",
x = offense_code_group)) %>%
mutate(offense_code_group = gsub(
pattern = "Burglary - No Property Taken",
replacement = "Burglary NPT",
x = offense_code_group))
df %>%
mutate(offense_code_group = gsub(
pattern = 'Motor Vehicle Accident Response',
replacement = "Motor Accident",
x = offense_code_group)) %>%
mutate(offense_code_group = gsub(
pattern = "HUMAN TRAFFICKING - INVOLUNTARY SERVITUDE",
replacement = "INVOLUNTARY SERVITUDE",
x = offense_code_group)) %>%
mutate(offense_code_group = gsub(
pattern = "Burglary - No Property Taken",
replacement = "Burglary NPT",
x = offense_code_group))
dist_word = df %>%
mutate(offense_code_group = gsub(
pattern = 'Motor Vehicle Accident Response',
replacement = "Motor Accident",
x = offense_code_group)) %>%
mutate(offense_code_group = gsub(
pattern = "HUMAN TRAFFICKING - INVOLUNTARY SERVITUDE",
replacement = "INVOLUNTARY SERVITUDE",
x = offense_code_group)) %>%
mutate(offense_code_group = gsub(
pattern = "Burglary - No Property Taken",
replacement = "Burglary NPT",
x = offense_code_group))
unique(dist_word$offense_code_group)
dist_word = df %>%
mutate(
offense_code_group = gsub(
pattern = 'Motor Vehicle Accident Response',
replacement = "Motor Accident",
x = offense_code_group
)
) %>%
mutate(
offense_code_group = gsub(
pattern = "HUMAN TRAFFICKING - INVOLUNTARY SERVITUDE",
replacement = "INVOLUNTARY SERVITUDE",
x = offense_code_group
)
) %>%
mutate(
offense_code_group = gsub(
pattern = "Burglary - No Property Taken",
replacement = "Burglary NPT",
x = offense_code_group
)
) %>%
mutate(offense_code_group = gsub(" ", "", x = offense_code_group, fixed = TRUE))
unique(dist_word$offense_code_group)
runApp('ShinyProject/BostonCrime')
install.packages('rsconnect')
runApp('ShinyProject/BostonCrime')
runApp('ShinyProject/BostonCrime')
rsconnect::setAccountInfo(name='zhuoyiliu',
token='2820CA03D4F6C12C84F0BE9093D2EC90',
secret='GNqXuMfPzuwSWJh0LayhLpimHFuzlp8w/GomDyR6')
rsconnect::deployApp('ShinyProject/BostonCrime/')
rsconnect::deployApp('ShinyProject/')
date_trend
runApp('ShinyProject/BostonCrime')
install.packages('htmltools')
install.packages('htmltools')
library("htmltools", lib.loc="D:/R/R-3.5.3/library")
library(htmltools)
runApp('ShinyProject/BostonCrime')
install.packages("dygraphs")
date_trend %>%
group_by(district, year) %>%
summarise(date_crime_count = n())
x = date_trend %>%
group_by(district, year) %>%
summarise(date_crime_count = n())
dygraph(x)
library(dygraphs)
dygraph(x)
x = date_trend %>%
group_by(district, date) %>%
summarise(date_crime_count = n())
dygraph(x)
dygraph(lungDeaths)
head(lungDeaths)
lungDeaths <- cbind(mdeaths, fdeaths)
head(lungDeaths)
dygraph(lungDeaths)
head(x)
dygraph(x)
head(mdeaths)
mdeaths
fdeaths
runApp('ShinyProject/BostonCrime')
runApp('ShinyProject/BostonCrime')
max(df$occurred_on_date)
#filter date remove time
date_trend = df %>%
mutate(date = as.Date(df$occurred_on_date, format = "%Y-%m-%d"))
max(date_trend$occurred_on_date)
#filter date remove time
date_trend = df %>%
mutate(date = as.Date(df$occurred_on_date, format = "%Y-%m-%d"))
max(date_trend$occurred_on_date)
date_trend
max(date_trend$date)
shiny::runApp('ShinyProject/BostonCrime')
date_trend %>%
group_by(date, district) %>%
summarise(date_crime_count = n()) %>%
ggplot(aes(x = date, y = date_crime_count, color = district)) +
geom_smooth()
date_trend %>%
group_by(date, district) %>%
summarise(date_crime_count = n()) %>%
ggplot(aes(x = date, y = date_crime_count)) +
geom_smooth(aes(color = district))
runApp('ShinyProject/BostonCrime')
runApp('ShinyProject/BostonCrime')
runApp('ShinyProject/BostonCrime')
runApp('ShinyProject/BostonCrime')
runApp('ShinyProject/BostonCrime')
runApp('ShinyProject/BostonCrime')
runApp('ShinyProject/BostonCrime')
